package udistrital.avanzada.taller.vista;

import udistrital.avanzada.taller.control.ControlInterfaz;

/**
 * Ventana principal de la aplicación <b>ConjurosConHilos</b>.
 * <p>
 * Esta clase representa el marco (ventana) base de toda la interfaz gráfica.
 * Contiene el panel principal en el que se mostrarán las diferentes pantallas
 * del programa —por ejemplo, el panel de inicio, los duelos o el marcador— y
 * gestiona la disposición general de la interfaz de usuario.
 * </p>
 *
 * <p>
 * Se comunica directamente con el controlador {@link ControlInterfaz}, que
 * maneja los eventos generados por la vista y orquesta el flujo de la
 * aplicación. De esta forma, se preserva la separación de responsabilidades
 * establecida por el patrón arquitectónico MVC.
 * </p>
 *
 * <p>
 * La clase utiliza un panel de fondo {@code bg} como contenedor raíz y un
 * componente {@link MainForm} como panel central dinámico, el cual puede
 * cambiar su contenido según las acciones del usuario.
 * </p>
 *
 * @author Paula Martinez
 * @version 1.0
 * @since 2025-10-25
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Controlador que gestiona la lógica de interacción con la interfaz gráfica
     * y coordina el flujo entre las distintas pantallas.
     */
    private ControlInterfaz cInterfaz;
    /**
     * Panel principal donde se mostrará el contenido dinámico según la opción
     * seleccionada o el estado actual del programa.
     */
    private MainForm main;

    /**
     * Crea una nueva instancia de la ventana principal.
     * <p>
     * Este constructor recibe una referencia al controlador de interfaz,
     * inicializa los componentes creados por el Form Editor de NetBeans y llama
     * al método {@link #init()} para configurar la estructura visual de la
     * ventana.
     * </p>
     *
     * @param cInterfaz controlador que gestiona la interacción de la interfaz
     */
    public VentanaPrincipal(ControlInterfaz cInterfaz) {
        initComponents();
        init();
    }

    /**
     * Inicializa la estructura y disposición de los componentes gráficos.
     * <p>
     * Este método establece el diseño de la ventana principal utilizando un
     * {@code nullLayout}, crea el panel central {@link MainForm}, define su
     * tamaño y lo añade al contenedor de fondo {@code bg}. Finalmente, centra
     * la ventana en la pantalla del usuario.
     * </p>
     */
    private void init() {
        // Se establece el layout manual (coordenadas absolutas)
        bg.setLayout(null);

        // Se crea el panel principal donde se mostrarán las diferentes vistas
        main = new MainForm();

        // Se define la posición y tamaño del panel principal dentro de la ventana
        main.setBounds(0, 0, 1200, 800);

        // Se añade el panel principal al contenedor de fondo
        bg.add(main);

        // Se establece el contenedor de fondo como contenido de la ventana
        setContentPane(bg);

        // Centra la ventana en la pantalla del usuario
        setLocationRelativeTo(null);
    }

    /**
     * Devuelve el panel principal en el que se cargan dinámicamente las
     * diferentes pantallas de la aplicación.
     *
     * @return el componente {@link MainForm} principal de la ventana
     */
    public MainForm getPanelMain() {
        return main;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    // End of variables declaration//GEN-END:variables
}
